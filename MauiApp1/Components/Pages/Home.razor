@page "/home"
@using MauiApp1.Model
@using MauiApp1.Services.Interface
@inject IUserService UserService
@inject NavigationManager Nav

Welcome to your  Maui Blazor App.

<button class="btn btn-lg btn-secondary" @onclick="ShowLogoutConfirmation" style="position: fixed; top: 20px; right: 20px;">
    Logout
</button>

<h2>Users List</h2>

<!-- Users List Table -->
@if (users.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>User Name</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.Username</td>
                    <td>
                        <button class="btn btn-danger" @onclick="() => DeleteUser(user.Username)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No users found.</p>
}
@if (!string.IsNullOrEmpty(Message))
{
    <div class="alert alert-info">
        @Message
    </div>
}

@if (IslogOut)
{
    <div class="modal" tabindex="-1" role="dialog" style="display: block; background-color: rgba(0, 0, 0, 0.5); position: fixed; top: 0; left: 0; width: 100%; height: 100%; overflow: auto;">
        <div class="modal-dialog" role="document" style="margin-top: 20%; margin-left: auto; margin-right: auto; max-width: 400px;">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm Logout</h5>
                    <button type="button" class="close" @onclick="HideLogoutConfirmation">
                        <span>&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to logout?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="HideLogoutConfirmation">No</button>
                    <button type="button" class="btn btn-primary" @onclick="Logout">Yes</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
	private List<User> users = new List<User>();

	private string Message = string.Empty;

	private bool IslogOut { get; set; } = false;
	protected override void OnInitialized()
	{
		GetAllUsers();
	}
	private void Logout()
	{
		Nav.NavigateTo("/login");
	}

	private async Task<List<User>> GetAllUsers()
	{
		try
		{
			users = UserService.GetAllUsers();

			return users;

		}
		catch (Exception ex)
		{
			throw new Exception();
		}
	}

	private async Task DeleteUser(string username)
	{
		bool result = UserService.DeleteUser(username);

		Message = result ? "Successfully Deleted" : "Error Deleting User";
	}

	private void ShowLogoutConfirmation()
	{
		IslogOut = true;
	}

	private void HideLogoutConfirmation()
	{
		IslogOut = false;
	}
}